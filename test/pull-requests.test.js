const nock = require('nock')
const app = require('../src/app')
const { Probot, ProbotOctokit } = require('probot')
const payload = require('./fixtures/payloads/pull-requests.opened.json')
const prClosedIssuesResponse = require('./fixtures/responses/pull-requets-closed-issues.json')
const issueResponse = require('./fixtures/responses/issue.json')
const fieldnewsSuggestionResponse = require('./fixtures/responses/fieldnews-suggestions.json')
const pullRequestCommentsResponse = require('./fixtures/responses/pull-request-comments.json')

describe('Test "pull requests" events', () => {
  let probot

  beforeEach(() => {
    nock.disableNetConnect()
    probot = new Probot({
      githubToken: 'test',
      Octokit: ProbotOctokit.defaults({
        retry: { enabled: false },
        throttle: { enabled: false }
      })
    })
    app(probot)
  })

  test('pull_request.opened', async () => {
    nock('https://api.github.com')
      .post('/graphql', (body) => {
        expect(body).toMatchObject({
          query: '\n' +
          '      query ($owner: String!, $name: String!, $prNumber: Int!) {\n' +
          '        repository (owner: $owner, name: $name) {\n' +
          '          pullRequest (number: $prNumber) {\n' +
          '            closingIssuesReferences (first: 5) {\n' +
          '              nodes {\n' +
          '                number\n' +
          '              }\n' +
          '            }\n' +
          '          }\n' +
          '        }\n' +
          '      }',
          variables: {
            owner: 'ottonielmatheus',
            name: 'fieldney-bot',
            prNumber: 9
          }
        })
        return true
      })
      .reply(200, prClosedIssuesResponse)

    nock('https://api.github.com')
      .post('/graphql', (body) => {
        expect(body).toMatchObject({
          query: '\n' +
          '      query ($owner: String!, $name: String!, $issueNumber: Int!) {\n' +
          '        repository (owner: $owner, name: $name) {\n' +
          '          issue (number: $issueNumber) {\n' +
          '            title\n' +
          '            body\n' +
          '          }\n' +
          '        }\n' +
          '      }\n' +
          '    ',
          variables: {
            owner: 'ottonielmatheus',
            name: 'fieldney-bot',
            issueNumber: 5
          }
        })
        return true
      })
      .reply(200, issueResponse)

    nock('https://api.openai.com:443')
      .post('/v1/completions', (body) => {
        expect(body).toMatchObject({
          prompt: '\n' +
            '      Comunique um e-mail descolado de uma altera√ß√£o no c√≥digo,\n' +
            '      com descri√ß√£o que deve ser explicativa para o p√∫blico em geral.\n' +
            '\n' +
            '      Ser√° enviado para funcion√°rios internos da empresa Field Control.\n' +
            '      Onde usamos "Fielders" para nos referirmos aos funcion√°rios da empresa.\n' +
            '\n' +
            '      Deve possuir os seguintes t√≥picos separados:\n' +
            '\n' +
            '      T√≥pico "**Contexto**", onde o contexto √©:\n' +
            '      Como "Issue description" afeta "Repository description".\n' +
            '\n' +
            '      T√≥pico "**Motiva√ß√µes**", onde as motiva√ß√µes para essas implementa√ß√µes foram:\n' +
            '      (Melhore esse texto: "Issue description")\n' +
            '\n' +
            '      T√≥pico "**Implementa√ß√£o**", onde as implementa√ß√µes s√£o:\n' +
            '      (melhore esse texto: "Pull request description")\n' +
            '\n' +
            '      E adicione um √∫ltimo t√≥pico "Evolu√ß√µes" apresentando as evolu√ß√µes que essas implementa√ß√µes implicam.\n' +
            '\n' +
            '      Importante: O texto gerado n√£o deve conter tabula√ß√µes.\n' +
            '    <END>',
          model: 'text-davinci-003',
          temperature: 1,
          max_tokens: 3024,
          stop: '<END>'
        })
        return true
      })
      .reply(200, fieldnewsSuggestionResponse)

    nock('https://api.github.com')
      .post('/graphql', (body) => {
        expect(body).toMatchObject({
          query: '\n' +
          '      query ($owner: String!, $name: String!, $prNumber: Int!) {\n' +
          '        repository (owner: $owner, name: $name) {\n' +
          '          pullRequest (number: $prNumber) {\n' +
          '            comments (first: 10) {\n' +
          '              nodes {\n' +
          '                databaseId\n' +
          '                body\n' +
          '                author {\n' +
          '                  login\n' +
          '                }\n' +
          '              }\n' +
          '            }\n' +
          '          }\n' +
          '        }\n' +
          '      }',
          variables: {
            owner: 'ottonielmatheus',
            name: 'fieldney-bot',
            prNumber: 9
          }
        })
        return true
      })
      .reply(200, pullRequestCommentsResponse)

    nock('https://api.github.com')
      .post('/repos/ottonielmatheus/fieldney-bot/issues/9/comments', (body) => {
        expect(body).toMatchObject({
          body: 'Sugest√£o de Fieldnews \n' +
          '------------ \n' +
          'Ol√° Dev, aqui vai uma sugest√£o de Fieldnews gerada pela **IA**.N√£o se esque√ßa de revisar! üöÄ \n' +
          '\n' +
          'Assunto: Atualiza√ß√µes da Base de C√≥digo da Field Control\n' +
          '\n' +
          'Prezados Fielders,\n' +
          '\n' +
          'Estamos empolgados para compartilhar as mais recentes atualiza√ß√µes na Base de C√≥digo da Field Control. Estamos expandindo nosso sistema para melhorar a produtividade de nossos usu√°rios e nos aproximar aos nossos objetivos de neg√≥cios.\n' +
          '\n' +
          'Contexto:\n' +
          '\n' +
          'Estamos fazendo uma atualiza√ß√£o no reposit√≥rio de c√≥digo da Field Control. Esta atualiza√ß√£o √© para permitir que o c√≥digo seja reutilizado por outros usu√°rios. Estes recursos permitir√£o que os Fielders criem uma documenta√ß√£o clara e eficiente, bem como fornecer um c√≥digo mais otimizado para uso futuro.\n' +
          '\n' +
          'Motiva√ß√µes:\n' +
          '\n' +
          'Estamos atualizando o reposit√≥rio de c√≥digo da Field Control para melhorar a facilidade de uso e introspec√ß√£o dos nossos recursos. Estas mudan√ßas nos permitir√£o desenvolver novos recursos de maneira mais √°gil e ter os melhores padr√µes de c√≥digo poss√≠veis.\n' +
          '\n' +
          'Implementa√ß√£o:\n' +
          '\n' +
          'Estamos fazendo commit em uma nova vers√£o do reposit√≥rio da Field Control. Devemos garantir que o c√≥digo atual seja refatorado e melhorado com novas ferramentas. Desse modo, dever√° ser mais intuitivo para os desenvolvedores trabalharem com ele e permitir√° que novas iteratividades sejam realizadas de forma mais r√°pida.\n' +
          '\n' +
          'Evolu√ß√£o:\n' +
          '\n' +
          'Esta implementa√ß√£o melhorar√° significativamente a facilidade de uso e a qualidade de nossas ferramentas. Estamos trabalhando para trazer novos recursos e melhorar a experi√™cia dos usu√°rios. A gera√ß√£o de documenta√ß√£o e evidencias de c√≥digo tamb√©m ser√£o muito mais efetivas, pois certas coisas n√£o mais ser√£o necess√°rias para a verifica√ß√£o de c√≥digo, pois tudo j√° estar√° pronto para uso.\n' +
          '\n' +
          'Aproveite os frutos da nossa atualiza√ß√£o e fique ligado para mais atualiza√ß√µes no futuro.\n' +
          '\n' +
          'Atenciosamente, \n' +
          'Equipe de Desenvolvimento da Field Control'
        })
        return true
      })
      .reply(200)

    await probot.receive({ name: 'pull_request.opened', payload })
  })

  afterEach(() => {
    nock.cleanAll()
    nock.enableNetConnect()
  })
})
